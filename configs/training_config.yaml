# VideoMAE Training Configuration for Badminton Hit Detection
# Configuration for fine-tuning VideoMAE on VideoBadminton_Dataset

# Model configuration
model:
  base_model: "MCG-NJU/videomae-base-finetuned-kinetics"  # Pre-trained VideoMAE model
  num_labels: 2  # Hit vs No-hit classification
  
# Data configuration
data:
  # Dataset paths
  train_dir: "data/VideoBadminton_Dataset/train/videos"
  val_dir: "data/VideoBadminton_Dataset/val/videos"
  test_dir: "data/VideoBadminton_Dataset/test/videos"
  
  # Annotation files (JSON format)
  train_annotations: "data/VideoBadminton_Dataset/train/annotations.json"
  val_annotations: "data/VideoBadminton_Dataset/val/annotations.json"
  test_annotations: "data/VideoBadminton_Dataset/test/annotations.json"
  
  # Video processing parameters
  window_size: 16  # Number of frames per video clip
  sample_rate: 2   # Frame sampling rate (take every N frames)
  frame_size: 224  # Input frame size (224x224)
  
  # Data augmentation (for training)
  augmentation:
    enabled: true
    horizontal_flip: true
    random_crop: true
    color_jitter: true
    rotation_range: 5  # degrees

# Training configuration
training:
  # Training parameters
  epochs: 50
  batch_size: 8  # Adjust based on GPU memory
  learning_rate: 1e-5
  weight_decay: 0.01
  warmup_ratio: 0.1
  
  # Checkpointing
  checkpoint_dir: "models/checkpoints"
  save_every: 5  # Save checkpoint every N epochs
  
  # Early stopping
  early_stopping:
    enabled: true
    patience: 10
    monitor: "val_f1"  # Metric to monitor
    
  # Loss function
  loss:
    type: "CrossEntropyLoss"
    class_weights: [1.0, 2.0]  # Weight for [no-hit, hit] classes (hits are more important)

# Evaluation configuration
evaluation:
  metrics: ["accuracy", "precision", "recall", "f1", "auc"]
  threshold: 0.5  # Classification threshold
  
# Hardware configuration
hardware:
  device: "auto"  # auto, cuda, cpu
  mixed_precision: true  # Use automatic mixed precision
  gradient_checkpointing: true  # Save memory at cost of speed
  
# Logging configuration
logging:
  level: "INFO"
  log_file: "training.log"
  
  # Weights & Biases integration
  use_wandb: false  # Set to true to enable W&B logging
  wandb_project: "shuttlesense-videomae"
  wandb_entity: null  # Your W&B entity (username/team)
  
  # TensorBoard logging
  use_tensorboard: true
  tensorboard_dir: "logs/tensorboard"

# Hyperparameter search (optional)
hyperparameter_search:
  enabled: false
  method: "random"  # random, grid, bayesian
  n_trials: 20
  
  # Parameters to search
  search_space:
    learning_rate: [1e-6, 1e-4]
    batch_size: [4, 8, 16]
    weight_decay: [0.001, 0.1]
    
# Model deployment
deployment:
  # Export configuration
  export_formats: ["pytorch", "onnx", "torchscript"]
  export_dir: "models/exported"
  
  # Quantization
  quantization:
    enabled: false
    method: "dynamic"  # dynamic, static, qat
    
  # Model compression
  compression:
    enabled: false
    method: "pruning"  # pruning, distillation